README
    - 해당 학습코드는 docker container에서 진행됨.
    
    - docker version : 20.10.2
    
    - 소스코드에 첨부된 Dockerfile를 빌드하여 학습해야 됨.
        - cd reproduce_model_compression
        - docker build . -t agc2021
        
    - yolov5 coco dataset 다운로드 필수
        - coco/images/train2017
        - coco/labels/train2017
        - coco/train2017.txt
        
    - docker run 방법
        (예시) docker --gpus=all -it --name= yolor_reproduce agc2021 sleep infinity
    
    - 최종 학습 완료된 weight 명은 agc2021.pt
    
2.1
    학습 실행코드명
        - bash train.sh

    추론 실행코드명
        - bash inference.sh

2.2
    scratch
        lr0: 0.01  # initial learning rate (SGD=1E-2, Adam=1E-3)
        lrf: 0.2  # final OneCycleLR learning rate (lr0 * lrf)
        momentum: 0.937  # SGD momentum/Adam beta1
        weight_decay: 0.0005  # optimizer weight decay 5e-4
        warmup_epochs: 3.0  # warmup epochs (fractions ok)
        warmup_momentum: 0.8  # warmup initial momentum
        warmup_bias_lr: 0.1  # warmup initial bias lr
        box: 0.05  # box loss gain
        cls: 0.5  # cls loss gain
        cls_pw: 1.0  # cls BCELoss positive_weight
        obj: 1.0  # obj loss gain (scale with pixels)
        obj_pw: 1.0  # obj BCELoss positive_weight
        iou_t: 0.20  # IoU training threshold
        anchor_t: 4.0  # anchor-multiple threshold
        # anchors: 3  # anchors per output layer (0 to ignore)
        fl_gamma: 0.0  # focal loss gamma (efficientDet default gamma=1.5)
        hsv_h: 0.015  # image HSV-Hue augmentation (fraction)
        hsv_s: 0.7  # image HSV-Saturation augmentation (fraction)
        hsv_v: 0.4  # image HSV-Value augmentation (fraction)
        degrees: 0.0  # image rotation (+/- deg)
        translate: 0.5  # image translation (+/- fraction)
        scale: 0.5  # image scale (+/- gain)
        shear: 0.0  # image shear (+/- deg)
        perspective: 0.0  # image perspective (+/- fraction), range 0-0.001
        flipud: 0.0  # image flip up-down (probability)
        fliplr: 0.5  # image flip left-right (probability)
        mosaic: 1.0  # image mosaic (probability)
        mixup: 0.0  # image mixup (probability)
        
    finetune
        lr0: 0.01  # initial learning rate (SGD=1E-2, Adam=1E-3)
        lrf: 0.2  # final OneCycleLR learning rate (lr0 * lrf)
        momentum: 0.937  # SGD momentum/Adam beta1
        weight_decay: 0.0005  # optimizer weight decay 5e-4
        warmup_epochs: 3.0  # warmup epochs (fractions ok)
        warmup_momentum: 0.8  # warmup initial momentum
        warmup_bias_lr: 0.1  # warmup initial bias lr
        box: 0.05  # box loss gain
        cls: 0.5  # cls loss gain
        cls_pw: 1.0  # cls BCELoss positive_weight
        obj: 1.0  # obj loss gain (scale with pixels)
        obj_pw: 1.0  # obj BCELoss positive_weight
        iou_t: 0.20  # IoU training threshold
        anchor_t: 4.0  # anchor-multiple threshold
        # anchors: 3  # anchors per output layer (0 to ignore)
        fl_gamma: 0.0  # focal loss gamma (efficientDet default gamma=1.5)
        hsv_h: 0.015  # image HSV-Hue augmentation (fraction)
        hsv_s: 0.7  # image HSV-Saturation augmentation (fraction)
        hsv_v: 0.4  # image HSV-Value augmentation (fraction)
        degrees: 0.0  # image rotation (+/- deg)
        translate: 0.5  # image translation (+/- fraction)
        scale: 0.8  # image scale (+/- gain)
        shear: 0.0  # image shear (+/- deg)
        perspective: 0.0  # image perspective (+/- fraction), range 0-0.001
        flipud: 0.0  # image flip up-down (probability)
        fliplr: 0.5  # image flip left-right (probability)
        mosaic: 1.0  # image mosaic (probability)
        mixup: 0.2  # image mixup (probability)

2.3 
    NVIDIA A100 8개

2.4 
    requirements.txt 전에 세팅
        apt-get update
        pip install -U scikit-image 
        pip install -U cython 
        pip install --upgrade pip
        pip install torch==1.10.0+cu111 torchvision==0.11.1+cu111 -f https://download.pytorch.org/whl/torch_stable.html
        apt install -y zip htop screen libgl1-mesa-glx
    
    사용한 패키지들의 종류와 버전이 담긴 requirements.txt 경로
        reproduce_model_compression/model_compression_inference/requirements.txt

2.5
    reproduce_model_compression/coco/images/train2017 
    reproduce_model_compression/coco/labels/train2017
    reproduce_model_compression/coco/train2017.txt 
